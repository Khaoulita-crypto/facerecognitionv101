{"version":3,"sources":["components/signIn/signIn.js","components/Register/Register.js","components/Navigation/Navigation.js","components/Logo/brain1.jpg","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","App.js","reportWebVitals.js","index.js"],"names":["SignIN","props","whenEmailChange","event","setState","signInEmail","target","value","whenPasswordChange","signInPassword","whenSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","id","loadUser","whenPageChange","this","className","htmlFor","onChange","type","name","onClick","React","Component","Register","whenNameChange","Navigation","isSignedIn","style","display","justifyContent","Logo","options","max","height","width","paddingTop","alt","src","brain1","ImageLinkForm","whenInputChange","whenSubmit","Rank","entries","FaceRecognition","imgUrl","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","app","Clarifai","App","apiKey","drawFaceBox","data","boxEdges","outputs","regions","region_info","bounding_box","image","document","getElementById","imgWidth","Number","imgHeight","console","log","left_col","top_row","right_col","bottom_row","displayFaceBox","input","models","predict","FACE_DETECT_MODEL","count","Object","assign","catch","err","joined","setPage","whichPage","params","particles","number","desity","enable","value_area","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.98e0b02a.chunk.js","sourcesContent":["import React from 'react'; \r\n\r\nclass SignIN extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      signInEmail:'',\r\n      signInPassword:''\r\n    }\r\n  }\r\n  whenEmailChange = (event) => {\r\n    this.setState({signInEmail: event.target.value})\r\n  }\r\n  whenPasswordChange = (event) => {\r\n    this.setState({signInPassword: event.target.value})\r\n  }\r\n  whenSubmitSignIn = () => {\r\n    fetch('https://immense-wildwood-14369.herokuapp.com/signIn', {\r\n      method:'post', \r\n      headers:{'content-type':'application/json'},\r\n      body: JSON.stringify({\r\n        email:this.state.signInEmail,\r\n        password:this.state.signInPassword\r\n      })\r\n    }).then(response => response.json())  //the res.json(user[0]) that I will get from serverfile if password and email matches \r\n      .then(user => {\r\n        if (user.id){    //but he said that we have to change it to if(user.id) but when I changed it I couldn't enter the user\r\n          this.props.loadUser(user);\r\n          this.props.whenPageChange('home');\r\n        }  \r\n      } )\r\n  }\r\n  render(){\r\n    const {whenPageChange} = this.props;\r\n    return (  \r\n      <article className='br3 ba  b--black-10 mv4 w-100 w-50-m  w-25-1 mw6 shadow-5 center' >\r\n        <main className=\"pa4 black-80\">\r\n           <div className=\"measure center\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n               <legend className=\"f1 fw6 ph0 mh0\"> Sign In</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\" > Email </label>\r\n                <input onChange={this.whenEmailChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\"name=\"email-address\" id=\"email-address\"/>\r\n             </div>\r\n             <div className=\"mv3\">\r\n               <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\" > Password </label>\r\n               <input onChange={this.whenPasswordChange} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\"name=\"password\"id=\"password\"/>\r\n             </div>\r\n              \r\n            </fieldset>\r\n              <div className=\"\">\r\n              <input onClick={this.whenSubmitSignIn} className=\" br3 b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"SIGN IN\" />\r\n              </div>\r\n              <div className=\"lh-copy mt3\">\r\n              <p  onClick={() => whenPageChange('Register') }  className=\"f6 link dim black db pointer\" > Register </p>\r\n              </div>\r\n           </div>\r\n       </main>\r\n</article>\r\n  );\r\n  }\r\n}\r\n\r\n\r\n\r\n/*  it is the one it work very fine before adding the backend part \r\nconst SignIN = ({whenPageChange, }) => {\r\n    return (  \r\n        <article className='br3 ba  b--black-10 mv4 w-100 w-50-m  w-25-1 mw6 shadow-5 center' >\r\n          <main className=\"pa4 black-80\">\r\n             <div className=\"measure center\">\r\n              <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                 <legend className=\"f1 fw6 ph0 mh0\"> Sign In</legend>\r\n                <div className=\"mt3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\" > Email </label>\r\n                  <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\"name=\"email-address\" id=\"email-address\"/>\r\n               </div>\r\n               <div className=\"mv3\">\r\n                 <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\" > Password </label>\r\n                 <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\"name=\"password\"id=\"password\"/>\r\n               </div>\r\n                \r\n              </fieldset>\r\n                <div className=\"\">\r\n                <input onClick={() => whenPageChange('home') } className=\" br3 b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"SIGN IN\" />\r\n                </div>\r\n                <div className=\"lh-copy mt3\">\r\n                <p  onClick={() => whenPageChange('Register') }  className=\"f6 link dim black db pointer\" > Register </p>\r\n                </div>\r\n             </div>\r\n         </main>\r\n </article>\r\n    \r\n    );\r\n}\r\n*/\r\n\r\nexport default SignIN; ","import React from 'react'; \r\n\r\n\r\nclass Register  extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          email:'',\r\n          password:'',\r\n          name:''\r\n        }\r\n      }\r\n      whenNameChange = (event) => {\r\n        this.setState({name: event.target.value})\r\n      }\r\n      whenEmailChange = (event) => {\r\n        this.setState({email: event.target.value})\r\n      }\r\n      whenPasswordChange = (event) => {\r\n        this.setState({password: event.target.value})\r\n      }\r\n      whenSubmitSignIn = () => {\r\n        fetch('https://immense-wildwood-14369.herokuapp.com/register', {  //it use to be http://localhost before \r\n          method:'post', \r\n          headers:{'content-type':'application/json'},\r\n          body: JSON.stringify({\r\n            email:this.state.email,\r\n            password:this.state.password,\r\n            name:this.state.name\r\n          })\r\n        }).then(response => response.json())\r\n          .then(user =>{\r\n            if (user ){\r\n              this.props.loadUser(user);\r\n              this.props.whenPageChange('home');\r\n            }\r\n          } )\r\n      }\r\n    render(){\r\n    return (  \r\n        <article className='br3 ba  b--black-10 mv4 w-100 w-50-m  w-25-1 mw6 shadow-5 center' >\r\n          <main className=\"pa4 black-80\">\r\n             <div className=\"measure center\">\r\n              <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                 <legend className=\"f1 fw6 ph0 mh0\"> Register Now </legend>\r\n                 <div className=\"mt3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\" > Complete Name </label>\r\n                  <input onChange={this.whenNameChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\" id=\"name\"/>\r\n               </div>\r\n                <div className=\"mt3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\" > Email </label>\r\n                  <input onChange={this.whenEmailChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\"name=\"email-address\" id=\"email-address\"/>\r\n               </div>\r\n               <div className=\"mv3\">\r\n                 <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\" > Password </label>\r\n                 <input onChange={this.whenPasswordChange} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\"name=\"password\"id=\"password\"/>\r\n               </div>\r\n                \r\n              </fieldset>\r\n                <div className=\"\">\r\n                <input onClick={this.whenSubmitSignIn } className=\" br3 b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\" />\r\n                </div>\r\n             </div>\r\n         </main>\r\n </article>\r\n    \r\n    );\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n/* this code worked very fine before the connection with backend \r\nconst Register = ({whenPageChange, }) => {\r\n    return (  \r\n        <article className='br3 ba  b--black-10 mv4 w-100 w-50-m  w-25-1 mw6 shadow-5 center' >\r\n          <main className=\"pa4 black-80\">\r\n             <div className=\"measure center\">\r\n              <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                 <legend className=\"f1 fw6 ph0 mh0\"> Register Now </legend>\r\n                 <div className=\"mt3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\" > Complete Name </label>\r\n                  <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\" id=\"name\"/>\r\n               </div>\r\n                <div className=\"mt3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\" > Email </label>\r\n                  <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\"name=\"email-address\" id=\"email-address\"/>\r\n               </div>\r\n               <div className=\"mv3\">\r\n                 <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\" > Password </label>\r\n                 <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\"name=\"password\"id=\"password\"/>\r\n               </div>\r\n                \r\n              </fieldset>\r\n                <div className=\"\">\r\n                <input onClick={() => whenPageChange('home') } className=\" br3 b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\" />\r\n                </div>\r\n             </div>\r\n         </main>\r\n </article>\r\n    \r\n    );\r\n}\r\n*/\r\nexport default Register; \r\n\r\n","import React from 'react'; \r\n\r\nconst Navigation = ({whenPageChange, isSignedIn}) => {\r\n    \r\n        if (isSignedIn) {\r\n            return (\r\n            <nav style={{display:'flex', justifyContent:'flex-end' }} >\r\n                <p onClick={() => whenPageChange('signout')} className='f3 link dim black underline pa3 pointer' > Sign Out </p>\r\n            </nav>\r\n            );\r\n        } else {\r\n            return (\r\n                <nav style={{display:'flex', justifyContent:'flex-end' }} >\r\n                  <p onClick={() => whenPageChange('signIn')} className='f3 link dim black underline pa3 pointer' > Sign In </p>\r\n                  <p onClick={() => whenPageChange('Register')} className='f3 link dim black underline pa3 pointer' > Register </p>\r\n                </nav>\r\n            ); }\r\n            }   \r\n\r\nexport default Navigation; ","export default __webpack_public_path__ + \"static/media/brain1.5ed43642.jpg\";","import React from 'react'; \r\nimport Tilt from 'react-tilt'; \r\nimport './Logo.css';\r\nimport brain1 from './brain1.jpg'; \r\n\r\n\r\n\r\nconst Logo = () => {\r\n    return (   \r\n       <div  className='ma4 mt0 '>\r\n          <Tilt className=\"Tilt br2 shadow-2 \" options={{ max : 75 }} style={{ height: 150, width: 150 }} >\r\n            <div className=\"Tilt-inner\"> <img style={{width:'130px', height:'130px', paddingTop:'10px'}} alt='brain Logo'src={brain1} /> </div>\r\n          </Tilt>\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default Logo; ","import React from 'react'; \r\n\r\n\r\n\r\nconst ImageLinkForm = ({whenInputChange, whenSubmit}) => {\r\n    return (   \r\n       <div >\r\n           <p className='f3 b'> {'This Intellegent Brain will detect all faces in your picture, give it a try  '} </p>\r\n           <div className='crazybg pa4 br3 w-70 shadow-5 center' >\r\n                <input onChange={whenInputChange} className='f4 pa2 w-70 center ' type='text'  />\r\n                <button onClick={whenSubmit} className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' >Detect!</button>\r\n          </div>\r\n        </div> \r\n    );\r\n}\r\n\r\nexport default ImageLinkForm; ","import React from 'react'; \r\n\r\n\r\n\r\nconst Rank = ({name, entries}) => {\r\n    return (   \r\n       <div >\r\n           <div className='f3 white'>\r\n              {`${name}, your current rank is:.. `}\r\n           </div>\r\n           <div className='f3 white'>\r\n              {`# ${entries} `}\r\n           </div>\r\n        </div> \r\n    );\r\n}\r\n\r\nexport default Rank; ","import React from 'react'; \r\nimport './FaceRecognition.css'; \r\n\r\n\r\n\r\nconst FaceRecognition = ({imgUrl, box}) => {\r\n    return (  \r\n        <div className='center ma' >\r\n          <div className='absolute  mt2 containerImgBox'  >\r\n              <img id='inputImage' alt='face' src={imgUrl} width='500px' height='auto' />\r\n              <div className='bounding-box' style={{top:box.topRow, right:box.rightCol, bottom:box.bottomRow, left:box.leftCol}} ></div>\r\n           </div> \r\n        </div> \r\n    );\r\n}\r\n\r\nexport default FaceRecognition; \r\n\r\n","import React, {Component } from 'react';\nimport SignIN from './components/signIn/signIn';\nimport Register from './components/Register/Register';\nimport Clarifai from 'clarifai';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\n\n\n\n/*\nconst app = new Clarifai.App({\n  apikey: 'c2ca6af3389843568c965d79e34c7133'\n}); */\n\nconst app = new Clarifai.App({\n  apiKey: 'c2ca6af3389843568c965d79e34c7133'\n });  \n\nclass  App extends Component {\n  constructor() {\n    super(); \n    this.state = { input:'', imgUrl:'',  box: { }, whichPage:'signIn',  isSignedIn: false,\n                  user: {id:'', name:'', email:'', entries:0, joined:'' }  }\n                  }\n  \n/*\n  componentDidMount(){ //it is a react cycle hook tha's come with react so we don't have to do arrow fct  \n   fetch('http://localhost:5000')\n   .then(response => response.json())\n   .then(data => console.log(data))\n  }\n*/\n  \n\n  drawFaceBox = (data) => {\n    const boxEdges = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const imgWidth = Number(image.width); \n    const imgHeight = Number(image.height); \n    console.log(imgWidth, imgHeight);\n    return {\n      leftCol : boxEdges.left_col * imgWidth, //top\n      topRow : boxEdges.top_row * imgHeight,  //right\n      rightCol : imgWidth - (boxEdges.right_col * imgWidth), //bottom\n      bottomRow : imgHeight - (boxEdges.bottom_row * imgHeight) //left\n    }\n  }\n\n   \n displayFaceBox = (box) => {\n   this.setState({box: box});\n }\n\n\n\n  whenInputChange = (event) => {\n     this.setState({input: event.target.value}); \n  }\n  \n  whenSubmit = () => {\n    this.setState({imgUrl:this.state.input});\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n    .then(response => {\n      if (response){\n        fetch('https://immense-wildwood-14369.herokuapp.com/image', { //this line use to be ** fetch('http://localhost:3000/image', {  ** before heroku I mean in localhost\n          method:'put', \n          headers:{'content-type':'application/json'},\n          body: JSON.stringify({\n            id:this.state.user.id\n          })\n      }).then(response =>response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, {entries:count}))\n        })\n      }\n      this.displayFaceBox(this.drawFaceBox(response))\n    } )\n    .catch(err => console.log(err,'what error with clarifai') ); \n  }\n\n\n\n  loadUser = (data) => {\n    this.setState({user: {id:data.id, name:data.name, email:data.email, entries:data.entries, joined:data.joined }})\n  }\n\n       whenPageChange = (setPage) => {\n         if (setPage === 'signout'){\n           this.setState({isSignedIn : false})\n         } else if ( setPage === 'home'){\n           this.setState ({isSignedIn : true })\n         }\n        this.setState ({whichPage:setPage }); \n          }\n\n  render (){\n    const {isSignedIn, imgUrl, box, whichPage, user} = this.state; \n  return (\n    <div className=\"App\">\n       <Particles className='particles' params={{particles: {number: {value:100, desity: {enable:true, value_area:50 }}}}} />     \n       <Navigation isSignedIn={isSignedIn} whenPageChange={this.whenPageChange} />\n       {whichPage === 'home' \n       ?  <div>\n          <Logo />\n          <Rank name={user.name} entries={user.entries } />\n          <ImageLinkForm whenInputChange={this.whenInputChange} whenSubmit={this.whenSubmit} />\n          <FaceRecognition box={box} imgUrl={imgUrl} />\n         </div>\n        : (\n           whichPage === 'signIn' \n          ? <SignIN loadUser={this.loadUser} whenPageChange={this.whenPageChange} />\n          : <Register loadUser={this.loadUser} whenPageChange={this.whenPageChange} />\n        )\n      }\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}